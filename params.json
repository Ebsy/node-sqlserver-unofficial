{"name":"Node-sqlserver-binary","tagline":"This is a compiled version of node-sqlserver patched to run on both x86 and x64 systems","body":"# Architecture independent Azure SQL binary driver\r\n\r\nThis is a binary distribution of Microsoft's\r\n[node-sqlserver](https://github.com/WindowsAzure/node-sqlserver), patched to run\r\non both x86 and x64 systems.\r\n\r\nNode 0.10.x is the latest version supported. A backport to the 0.8 series using\r\nthe [official Microsoft\r\nbinaries](http://www.microsoft.com/en-us/download/details.aspx?id=29995) is\r\navailable in the `node-0.8-series` branch.\r\n\r\n## Dependencies\r\n\r\n * Node.JS Runtime 0.10.x ([0.10.5](http://nodejs.org/dist/v0.10.5/)\r\n   recommended, as it's the most recent version available in Azure)\r\n * Microsoft SQL Server 2012 Native Client available in the [SQL Server 2012\r\n   Feature Pack](http://www.microsoft.com/en-us/download/details.aspx?id=29065).\r\n * Any edition of SQL Server 2005 or later.\r\n\r\n## Local test\r\n\r\nBefore running the server, `connectionString` in `server.js` must be set to your\r\nSQL Azure login credentials. An example would be\r\n\r\n    var connectionString = \"Driver={SQL Server Native Client 11.0};Server=tcp:?.database.windows.net,1433;Database=?;Uid=?;Pwd=?\";\r\n\r\nIf the dependencies have been correctly installed on your machine and the login\r\ncredentials are correct, running\r\n\r\n    $ node server.js\r\n\r\nand accessing `http://localhost:1337` will present a message similar to\r\n\r\n    node v0.10.5 x64.\r\n    Query result - 1 \r\n\r\n## Azure deployment\r\n\r\nThis project is an example of a deployable Azure website that queries an Azure\r\nSQL database and prints the result. A very simple sanity test, in essence.\r\n\r\nIn a typical deployment, `node_modules` is not under source control. Instead,\r\nthe dependencies are specified in the `package.json` file. During deployment,\r\nAzure will issue a `npm install` in the project root which will download all the\r\nspecified dependencies.\r\n\r\nThis will fail with node-sqlserver because Azure will not me able to compile it.\r\nHence, instead of specifying the dependency in `package.json`, we add\r\n`node_modules\\msnodesql\\` to the repository. The result is a `.gitignore` that\r\nlooks like\r\n\r\n    node_modules/\r\n    !node_modules/msnodesql/\r\n\r\n## Copyright and license\r\n\r\nThis derivative work is hereby released under the MIT license, as made possible by the\r\nterms of the Apache 2.0 license of the original node-sqlserver.\r\n\r\nTerms available for review in LICENSE\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}